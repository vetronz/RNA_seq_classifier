Euclidian distance
d_{euc}(x,y) = \sqrt[2]{\sum_{i=1}^n(xi-yi)^2}

# Hartigan-Wong algorithm (1979). Minimise:
sum of squared Euclidean distances between items and the corresponding centroid
W(C_k)=\sum_{x_i\setx \in C_k}(x_i-\mu_k)^2


tot.withiness = \sum_{k=1}^kW(C_k) = \sum_{k=1}^k\sum_{x_i\setx \in C_k}(x_i-\mu_k)^2

# t.stat
t =  \frac{\widehat{\beta}}{\frac{s}{\sqrt{n}}}

# elastic net
minimize
\left\{
SSE + \lambda_{1}\sum_{j=1}^p\beta^{2}_{j} +
\lambda_{2}\sum_{j=1}^p|\beta_{j}|
\right\}

# neural net vec implementation
Zm = \sigma(\alpha_{0m} + \alpha^T_mX), m=1...,M\\ 
Yk = \sigma(\beta_{0k} + \beta^T_kZ), k=1...,K\\
Output =  g_k(Y), k=1...,K\\


https://csdn.codecogs.com/eqneditor/editor.php


